#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.21
#  in conjunction with Tcl version 8.6
#    Mar 23, 2019 03:41:53 PM IST  platform: Windows NT

import sys
from tabulate import tabulate
import csv
import numpy as np
import pandas as pd
from tkintertable import TableCanvas, TableModel

global z
try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True
from tkinter import Frame
import tkinter.font
import unknown2_support
import os.path



def adjustColumnWidths(self):
        """Optimally adjust col widths to accomodate the longest entry
            in each column - usually only called  on first redraw"""

        #self.cols = self.model.getColumnCount()
        try:
            fontsize = self.thefont[1]
        except:
            fontsize = self.fontsize
        scale = 8.5 * float(fontsize)/12
        for col in range(self.cols):
            colname = self.model.getColumnName(col)
            if colname in self.model.columnwidths:
                w = self.model.columnwidths[colname]
            else:
                w = self.cellwidth
            maxlen = self.model.getlongestEntry(col)
            size = maxlen * scale
            if size < w:
                continue
            #print col, size, self.cellwidth
            if size >= self.maxcellwidth:
                size = self.maxcellwidth
            self.model.columnwidths[colname] = size + float(fontsize)/12*6
        return  


def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    global prog_location
    prog_call = sys.argv[0]
    print ('prog_call = {}'.format(prog_call))
    prog_location = os.path.split(prog_call)[0]
    print ('prog_location = {}'.format(prog_location))
    sys.stdout.flush()
    root = tk.Tk()
    top = Toplevel1 (root)
    
    unknown2_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    global prog_location
    prog_call = sys.argv[0]
    print ('prog_call = {}'.format(prog_call))
    prog_location = os.path.split(prog_call)[0]
    print ('prog_location = {}'.format(prog_location))
    rt = root
    w = tk.Toplevel (root)
    top = Toplevel1 (w)
    unknown2_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        font9 = "-family {Segoe UI} -size 14 -weight bold"
        font91 = "-family {Segoe UI} -size 8 -weight bold"

        top.geometry("600x450+406+135")
        top.title("New Toplevel")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.Label1 = tk.Label(top)
        self.Label1.place(relx=0.0, rely=-0.022, height=831, width=1380)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(activeforeground="#000000")
        self.Label1.configure(background="#0d0819")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(font=font9)
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="black")
        photo_location = os.path.join(prog_location,"art.png")
        self._img0 = tk.PhotoImage(file=photo_location)
        self.Label1.configure(image=self._img0)
        #self.Label1.configure(text='''Label''')

        self.Label2 = tk.Label(top)
        self.Label2.place(relx=0.35, rely=0.689, height=71, width=304)
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(activeforeground="black")
        self.Label2.configure(background="#d9d9d9")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(font=font9)
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(highlightbackground="#d9d9d9")
        self.Label2.configure(highlightcolor="black")
        self.Label2.configure(text=z)


##
       # the_text_widget = tk.Text(top,height=4,width=50)
        #data=""
##        with open("sub.csv", "r") as f:
##                  data1 = f.read()
##                  data=data + data1[8:]
##                 # the_text_widget.insert("1.0", data)

       
        
##        with open("sub.csv") as inf:
##            rowr=csv.reader(inf,delimiter=',')
##            a=tabulate(rowr)

           
        self.tframe = tk.Frame(top)
       
        self.tframe.pack()
        
        
        table = TableCanvas(self.tframe,cellwidth=5000, width="1000",	
                 
               editable=False
              )
       
       
        
       

        table.show()
    
       
        
        
        table.redraw()
        
        table.importCSV("sub.csv")
       
      
       
        
        
        
       


       
##        self.Listbox1 = tk.Listbox(top)
##        self.Listbox1.place(relx=0.19, rely=0.292, relheight=0.397
##                   , relwidth=0.618)
##        self.Listbox1.configure(background="#e2d7de")
##        self.Listbox1.configure(disabledforeground="#a3a3a3")
##        #self.Listbox1.configure(font=font9)
##        self.Listbox1.configure(foreground="black")
##        self.Listbox1.configure(width=844)
##        self.Listbox1.configure(borderwidth=0)
##        i=1
##        for line in a.splitlines():
##            self.Listbox1.insert(i,line)
##            i=i+1
##       
##       
                  
##        self.Label3 = tk.Label(top)
##        self.Label3.place(relx=0.00, rely=0.232, height=500, width=744)
##        self.Label3.configure(activebackground="#f9f9f9")
##        self.Label3.configure(activeforeground="black")
##        self.Label3.configure(background="white")
##        #self.Label3.configure(font="TkTextFont")
##        self.Label3.configure(foreground="black")
##        self.Label3.configure(highlightbackground="#d9d9d9")
##        self.Label3.configure(highlightcolor="black")
####        self.Label3.configure(insertbackground="black")
####        self.Label3.configure(selectbackground="#c4c4c4")
####        self.Label3.configure(selectforeground="black")
##        #self.Label3.configure(width=744)
##        #self.Text1.configure(wrap='word')
##        self.Label3.configure(text=a)

##        with open("sub.csv",errors='ignore', newline = "") as file:
##            reader = csv.reader(file)
##
##            # r and c tell us where to grid the labels
##            r = 0
##            for col in reader:
##               c = 0
##               for row in col:
##                  # i've added some styling
##                  self.label = tk.Label(top,width=50, height = 5, 
##                                         text = row,bg="white")
##                
##                  
##                  
##                  self.label.grid(row = r, column = c)
##                  c += 1
##               r += 1
##            self.label.grid(ipadx=200,ipady=5,column=0)
##            self.label.grid(ipadx=400,ipady=5,column=1)
##            self.label.grid(ipadx=500,ipady=5,column=2)
##            print(c)
##             
       
        
##        self.Button1 = tk.Button(top)
##        self.Button1.place(relx=0.383, rely=0.111, height=24, width=47)
##        self.Button1.configure(activebackground="#ececec")
##        self.Button1.configure(activeforeground="#000000")
##        self.Button1.configure(background="#d9d9d9")
##        self.Button1.configure(disabledforeground="#a3a3a3")
##        self.Button1.configure(foreground="#000000")
##        self.Button1.configure(highlightbackground="#d9d9d9")
##        self.Button1.configure(highlightcolor="black")
##        self.Button1.configure(pady="0")
##        self.Button1.configure(text='''Button''')

if __name__ == '__main__':
    vp_start_gui()





